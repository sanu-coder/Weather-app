{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Complete Weather app\\\\weather_app\\\\src\\\\App.js\";\nimport React from 'react'; // import ReactDOM from 'react-dom';\n\nimport Heading from \"./Components/Heading\";\nimport Form1 from \"./Components/form\";\nimport Forecast from \"./Components/forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"9ec0a6d67c1f3f725daeef252e6f726f\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: \"\",\n      city: \"\",\n      country: \"\",\n      humidity: \"\",\n      pressure: \"\",\n      icon: \"\",\n      description: \"\",\n      error: \"\"\n    };\n\n    this.getWeather = async e => {\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      e.preventDefault();\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=imperial&appid=${api_key}`);\n      const response = await api_call.json();\n\n      if (city && country) {\n        this.setState({\n          temperature: response.main.temp,\n          city: response.name,\n          country: response.sys.country,\n          humidity: response.main.humidity,\n          pressure: response.main.pressure,\n          icon: response.weather[0].icon,\n          description: response.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          error: \"Please fill out i/p feilds\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form1, {\n        loadWeather: this.getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        humidity: this.state.humidity,\n        pressure: this.state.pressure,\n        icon: this.state.icon,\n        description: this.state.description,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Complete Weather app/weather_app/src/App.js"],"names":["React","Heading","Form1","Forecast","api_key","App","Component","state","temperature","city","country","humidity","pressure","icon","description","error","getWeather","e","target","elements","value","preventDefault","api_call","fetch","response","json","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AACA,MAAMC,OAAO,GAAC,kCAAd;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACvB;AACFC,MAAAA,WAAW,EAAC,EADV;AAEFC,MAAAA,IAAI,EAAC,EAFH;AAGFC,MAAAA,OAAO,EAAC,EAHN;AAIFC,MAAAA,QAAQ,EAAC,EAJP;AAKFC,MAAAA,QAAQ,EAAC,EALP;AAMFC,MAAAA,IAAI,EAAC,EANH;AAOFC,MAAAA,WAAW,EAAC,EAPV;AAQFC,MAAAA,KAAK,EAAC;AARJ,KADuB;;AAAA,SA4B7BC,UA5B6B,GA4BlB,MAAMC,CAAN,IAAU;AACjB,YAAMR,IAAI,GAACQ,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBV,IAAlB,CAAuBW,KAAlC;AACA,YAAMV,OAAO,GAACO,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBT,OAAlB,CAA0BU,KAAxC;AACAH,MAAAA,CAAC,CAACI,cAAF;AACA,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,qDAAoDd,IAAK,IAAGC,OAAQ,yBAAwBN,OAAQ,EAAtG,CAA1B;AACA,YAAMoB,QAAQ,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAtB;;AACA,UAAGhB,IAAI,IAAEC,OAAT,EAAiB;AACb,aAAKgB,QAAL,CAAc;AACVlB,UAAAA,WAAW,EAACgB,QAAQ,CAACG,IAAT,CAAcC,IADhB;AAEVnB,UAAAA,IAAI,EAACe,QAAQ,CAACK,IAFJ;AAGVnB,UAAAA,OAAO,EAACc,QAAQ,CAACM,GAAT,CAAapB,OAHX;AAIVC,UAAAA,QAAQ,EAACa,QAAQ,CAACG,IAAT,CAAchB,QAJb;AAKVC,UAAAA,QAAQ,EAACY,QAAQ,CAACG,IAAT,CAAcf,QALb;AAMVC,UAAAA,IAAI,EAACW,QAAQ,CAACO,OAAT,CAAiB,CAAjB,EAAoBlB,IANf;AAOVC,UAAAA,WAAW,EAACU,QAAQ,CAACO,OAAT,CAAiB,CAAjB,EAAoBjB,WAPtB;AAQVC,UAAAA,KAAK,EAAC;AARI,SAAd;AAUH,OAXD,MAYI;AACA,aAAKW,QAAL,CAAc;AACVX,UAAAA,KAAK,EAAC;AADI,SAAd;AAGH;AAEJ,KApD4B;AAAA;;AAW7BiB,EAAAA,MAAM,GAAE;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,GAAf;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKhB;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AACG,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWC,WAD3B;AAEG,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAFpB;AAGG,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAHvB;AAII,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAJzB;AAKI,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QALzB;AAMI,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IANrB;AAOI,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWO,WAP5B;AAQI,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ;AARtB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeC;;AA3B4B;;AAsDjC,eAAeV,GAAf","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\nimport Heading from \"./Components/Heading\";\nimport Form1 from \"./Components/form\";\nimport Forecast from \"./Components/forecast\";\nconst api_key=\"9ec0a6d67c1f3f725daeef252e6f726f\";\nclass App extends React.Component{\n    state={\n        temperature:\"\",\n        city:\"\",\n        country:\"\",\n        humidity:\"\",\n        pressure:\"\",\n        icon:\"\",\n        description:\"\",\n        error:\"\"\n    }\n    render(){\n    return ( \n        <div className=\"c\">\n            <Heading/>\n            <Form1 loadWeather={this.getWeather}/>\n            <Forecast \n               temperature={this.state.temperature}\n               city={this.state.city}\n               country={this.state.country}\n                humidity={this.state.humidity}\n                pressure={this.state.pressure}\n                icon={this.state.icon}\n                description={this.state.description}\n                error={this.state.error}/>\n        </div>\n     );\n    }\n    getWeather=async(e)=>{\n        const city=e.target.elements.city.value;\n        const country=e.target.elements.country.value;\n        e.preventDefault();\n        const api_call=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=imperial&appid=${api_key}`);\n        const response =await api_call.json();\n        if(city&&country){\n            this.setState({\n                temperature:response.main.temp,\n                city:response.name,\n                country:response.sys.country,\n                humidity:response.main.humidity,\n                pressure:response.main.pressure,\n                icon:response.weather[0].icon,\n                description:response.weather[0].description,\n                error:\"\"\n            })\n        }\n        else{\n            this.setState({\n                error:\"Please fill out i/p feilds\"\n            })\n        }\n    \n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}